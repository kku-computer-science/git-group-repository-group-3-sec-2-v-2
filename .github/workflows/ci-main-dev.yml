name: Laravel CI

on:
  push:
    branches:
      - main-dev
  pull_request:
    branches:
      - main-dev

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, intl, pcntl
          coverage: none

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: InitialProject/src/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('InitialProject/src/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: cd InitialProject/src && composer install --prefer-dist --no-progress --no-suggest

      # Setup application environment
      - name: Setup .env
        run: cd InitialProject/src && cp .env.example .env

      # Generate application key
      - name: Generate application key
        run: cd InitialProject/src && php artisan key:generate

      # Run database migrations
      - name: Run database migrations
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: /tmp/database.sqlite
        run: |
          cd InitialProject/src
          touch /tmp/database.sqlite
          php artisan migrate --force

      # Static Analysis with PHPStan
      - name: Run PHPStan
        run: cd InitialProject/src && vendor/bin/phpstan analyse --memory-limit=1G
        env:
          COMPOSER_MEMORY_LIMIT: -1

      # Code Style Check with Laravel Pint
      - name: Run Laravel Pint
        run: cd InitialProject/src && vendor/bin/pint --test

      # Check Dependencies for Vulnerabilities
      - name: Check Dependencies for Vulnerabilities
        run: cd InitialProject/src && composer audit || exit 1

      # Run PHPUnit tests
      - name: Run PHPUnit tests
        run: cd InitialProject/src && vendor/bin/phpunit

      # Lint JavaScript files with JSHint
      - name: Lint JavaScript files
        uses: igorshubovych/markdownlint-cli@v0.33.0
        with:
          args: "InitialProject/src/public/js/**/*.js"
